version: "3.9"

services:
  # ======================
  # PostgreSQL Database
  # ======================
  db:
    image: postgres:16
    container_name: lms_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-lms_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - lms_network

  # ======================
  # Redis (for Celery)
  # ======================
  redis:
    image: redis:7
    container_name: lms_redis
    restart: always
    networks:
      - lms_network

  # ======================
  # Django API Backend
  # ======================
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "5000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - lms_network

  # ======================
  # Celery Worker
  # ======================
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms_celery
    command: celery -A config worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
    networks:
      - lms_network

  # ======================
  # Celery Beat (Scheduler)
  # ======================
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms_celery_beat
    command: celery -A config beat -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
    networks:
      - lms_network

# ======================
# Named Volumes
# ======================
volumes:
  postgres_data:
  static_volume:
  media_volume:

# ======================
# Shared Network
# ======================
networks:
  lms_network:
    driver: bridge
